%% Passthrough barcoder

% Make sure volume is at about 1/3 before running this

match_file_function     = @algorithms.barcoder.match_file;
get_song_name_function  = @algorithms.barcoder.get_song_name;
database_filename       = 'barcoder.db';
clip_length             = 5;
test_clips_folder       = ['./test_clips/passthrough/' num2str(clip_length) 'sec/'];
input_folder            = './library/';
scoring_mode            = 'min';
m                       = 9;

testing.run_passthrough_tests(match_file_function, ...
                              get_song_name_function, ...
                              database_filename, ...
                              test_clips_folder, ...
                              input_folder, ...
                              scoring_mode, ...
                              clip_length, ...
                              m)
                  
                  
%% Passthrough constellation

% Make sure volume is up before running this

match_file_function     = @algorithms.constellation.match_file;
get_song_name_function  = @algorithms.constellation.get_song_name;
database_filename       = 'constellation.db';
clip_length             = 5;
test_clips_folder       = ['./test_clips/passthrough/' num2str(clip_length) 'sec/'];
input_folder            = './library/';
scoring_mode            = 'max';
m                       = 9;

testing.run_passthrough_tests(match_file_function, ...
                              get_song_name_function, ...
                              database_filename, ...
                              test_clips_folder, ...
                              input_folder, ...
                              scoring_mode, ...
                              clip_length, ...
                              m)
                  
                  
%% Gaussian barcoder

database_filename       = 'barcoder.db';
match_file_function     = @algorithms.barcoder.match_file;
get_song_name_function  = @algorithms.barcoder.get_song_name;
clip_length             = 5;
snr                     = 0; %dB
input_folder            = './library/';
test_clips_folder       = ['./test_clips/gaussian_noise/' num2str(cliplength) 'sec/' num2str(snr) 'db/'];
scoring_mode            = 'min';
m                       = 5;

testing.run_gaussian_tests(match_file_function, ...
                           get_song_name_function, ...
                           database_filename, ...
                           test_clips_folder, ...
                           input_folder, ...
                           scoring_mode, ...
                           clip_length, ...
                           m, ...
                           snr)
                  
                  
%% Gaussian constellation

database_filename       = 'constellation.db';
match_file_function     = @algorithms.constellation.match_file;
get_song_name_function  = @algorithms.constellation.get_song_name;
clip_length             = 5;
snr                     = 0; %dB
input_folder            = './library/';
test_clips_folder       = ['./test_clips/gaussian_noise/' num2str(cliplength) 'sec/' num2str(snr) 'db/'];
scoring_mode            = 'max';
m                       = 5;

testing.run_gaussian_tests(match_file_function, ...
                           get_song_name_function, ...
                           database_filename, ...
                           test_clips_folder, ...
                           input_folder, ...
                           scoring_mode, ...
                           clip_length, ...
                           m, ...
                           snr)
               
                  
%% Basic barcoder

match_file_function     = @algorithms.barcoder.match_file;
get_song_name_function  = @algorithms.barcoder.get_song_name;
database_filename       = 'barcoder.db';
clip_length             = 5;
test_clips_folder       = ['./test_clips/basic/' num2str(clip_length) 'sec/'];
input_folder            = './library/';
scoring_mode            = 'min';
m                       = 5;

testing.run_basic_tests(match_file_function, ...
                        get_song_name_function, ...
                        database_filename, ...
                        test_clips_folder, ...
                        input_folder, ...
                        scoring_mode, ...
                        clip_length, ...
                        m)
                  
                  
%% Basic constellation

match_file_function     = @algorithms.constellation.match_file;
get_song_name_function  = @algorithms.constellation.get_song_name;
database_filename       = 'constellation.db';
clip_length             = 5;
test_clips_folder       = ['./test_clips/basic/' num2str(clip_length) 'sec/'];
input_folder            = './library/';
scoring_mode            = 'max';
m                       = 5;

testing.run_basic_tests(match_file_function, ...
                        get_song_name_function, ...
                        database_filename, ...
                        test_clips_folder, ...
                        input_folder, ...
                        scoring_mode, ...
                        clip_length, ...
                        m)
                  
